TYPESYSTEM ProjectTypeSystem;

SCRIPT GrammarBuilder;
Document{-> CALL(GrammarBuilder)};


//A2*********************
//SCRIPT A2_Level.A2_Nouns;

//1.NounPhrases
//1.DeterminerUncountableNoun
(Determiner  UncountableNoun) {-> CREATE(GrammarProfile, "subCategory"="NounPhrases", "superCategory"="Noun", "name"="DeterminerUncountableNoun", "level"="A2")};

//2.DeterminerNoun
(Determiner  POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="NounPhrases", "superCategory"="Noun", "name"="DeterminerNoun", "level"="A2")};

//3.NounPhrasesWithAdjectives
(POS_ADJ POS_ADJ COMMA POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="NounPhrases", "superCategory"="Noun", "name"="NounPhrasesWithAdjectives", "level"="A2")};
(POS_ADJ POS_ADJ POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="NounPhrases", "superCategory"="Noun", "name"="NounPhrasesWithAdjectives", "level"="A2")};

//4.WithRelativeClauseAsPostmodifier
(NC COMMA W{REGEXP("(?i)which")} VC) {-> CREATE(GrammarProfile, "subCategory"="NounPhrases", "superCategory"="Noun", "name"="WithRelativeClauseAsPostmodifier", "level"="A2")};

//5.WithRelativeClauseAsComplement
(NC WHWord NC VC) {-> CREATE(GrammarProfile, "subCategory"="NounPhrases", "superCategory"="Noun", "name"="WithRelativeClauseAsComplement", "level"="A2")};
(NC WHWord VC NC) {-> CREATE(GrammarProfile, "subCategory"="NounPhrases", "superCategory"="Noun", "name"="WithRelativeClauseAsComplement", "level"="A2")};
(NC WHWord VC) {-> CREATE(GrammarProfile, "subCategory"="NounPhrases", "superCategory"="Noun", "name"="WithRelativeClauseAsComplement", "level"="A2")};

//6.PossessionWithSNoun
(POS{FEATURE("PosValue", "PRP$")} POS_NOUN POS{FEATURE("PosValue", "POS")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="NounPhrases", "superCategory"="Noun", "name"="PossessionWithSNoun", "level"="A2")};


//2.TypesNoun
//7.IngFormsObject
(Preposition Doing) {-> CREATE(GrammarProfile, "subCategory"="TypesNoun", "superCategory"="Noun", "name"="IngFormsObject", "level"="A2")};
(POS_VERB Doing) {-> CREATE(GrammarProfile, "subCategory"="TypesNoun", "superCategory"="Noun", "name"="IngFormsObject", "level"="A2")};
(Preposition W{REGEXP("(?i)swimming")}) {-> CREATE(GrammarProfile, "subCategory"="TypesNoun", "superCategory"="Noun", "name"="IngFormsObject", "level"="A2")};
(W{REGEXP("(?i)and")} W{REGEXP("(?i)going")}) {-> CREATE(GrammarProfile, "subCategory"="TypesNoun", "superCategory"="Noun", "name"="IngFormsObject", "level"="A2")};
(POS_VERB W{REGEXP("(?i)dancing")}) {-> CREATE(GrammarProfile, "subCategory"="TypesNoun", "superCategory"="Noun", "name"="IngFormsObject", "level"="A2")};
(POS_VERB W{REGEXP("(?i)windsurfing")} W{REGEXP("(?i)and")} W{REGEXP("(?i)scuba")} W{REGEXP("(?i)diving")}) {-> CREATE(GrammarProfile, "subCategory"="TypesNoun", "superCategory"="Noun", "name"="IngFormsObject", "level"="A2")};

//3.PluralNoun
//8.PluralEs
(POS{FEATURE("PosValue", "NNS")}) {-> CREATE(GrammarProfile, "subCategory"="PluralNoun", "superCategory"="Noun", "name"="PluralEs", "level"="A2")};

//9.PluralIes
(POS{FEATURE("PosValue", "NNS")}) {-> CREATE(GrammarProfile, "subCategory"="PluralNoun", "superCategory"="Noun", "name"="PluralIes", "level"="A2")};

//10.IrregularPluralNouns
(IrregularPluralNoun) {-> CREATE(GrammarProfile, "subCategory"="PluralNoun", "superCategory"="Noun", "name"="IrregularPluralNouns", "level"="A2")};

//11.NounOnlyUsedInThePlural
(W{REGEXP("(?i)clothes")}) {-> CREATE(GrammarProfile, "subCategory"="PluralNoun", "superCategory"="Noun", "name"="NounOnlyUsedInThePlural", "level"="A2")};
(W{REGEXP("(?i)jeans")}) {-> CREATE(GrammarProfile, "subCategory"="PluralNoun", "superCategory"="Noun", "name"="NounOnlyUsedInThePlural", "level"="A2")};
(W{REGEXP("(?i)shorts")}) {-> CREATE(GrammarProfile, "subCategory"="PluralNoun", "superCategory"="Noun", "name"="NounOnlyUsedInThePlural", "level"="A2")};
(W{REGEXP("(?i)glasses")}) {-> CREATE(GrammarProfile, "subCategory"="PluralNoun", "superCategory"="Noun", "name"="NounOnlyUsedInThePlural", "level"="A2")};


//4.Uncountable
//12.UncountableNouns
(UncountableNoun) {-> CREATE(GrammarProfile, "subCategory"="UncountableNoun", "superCategory"="Noun", "name"="UncountableNouns", "level"="A2")};

//13.WithTheUncountableNouns
(W{REGEXP("(?i)the")} UncountableNoun) {-> CREATE(GrammarProfile, "subCategory"="UncountableNoun", "superCategory"="Noun", "name"="WithTheUncountableNouns", "level"="A2")};

//14.WithDeterminersQuantityUncountableNouns
(DeterminerWithUncountableNouns UncountableNoun) {-> CREATE(GrammarProfile, "subCategory"="UncountableNoun", "superCategory"="Noun", "name"="WithDeterminersQuantityUncountableNouns", "level"="A2")};

//15.ContainersQuantityExpressionsUncountableNouns
(W{REGEXP("(?i)a")} W{REGEXP("(?i)bottle")} W{REGEXP("(?i)of")} UncountableNoun) {-> CREATE(GrammarProfile, "subCategory"="UncountableNoun", "superCategory"="Noun", "name"="ContainersQuantityExpressionsUncountableNouns", "level"="A2")};
(W{REGEXP("(?i)a")} W{REGEXP("(?i)piece")} W{REGEXP("(?i)of")} UncountableNoun) {-> CREATE(GrammarProfile, "subCategory"="UncountableNoun", "superCategory"="Noun", "name"="ContainersQuantityExpressionsUncountableNouns", "level"="A2")};
(W{REGEXP("(?i)a")} W{REGEXP("(?i)cup")} W{REGEXP("(?i)of")} UncountableNoun) {-> CREATE(GrammarProfile, "subCategory"="UncountableNoun", "superCategory"="Noun", "name"="ContainersQuantityExpressionsUncountableNouns", "level"="A2")};


//SCRIPT A2_Level.A2_Pronouns;

//1.Possessive
//1.OfMine
(Determiner POS_NOUN W{REGEXP("(?i)of")} W{REGEXP("(?i)mine")}) {-> CREATE(GrammarProfile, "subCategory"="PossessivePronoun", "superCategory"="Pronoun", "name"="OfMine", "level"="A2")};

//2.Mine
(W{REGEXP("(?i)mine")}) {-> CREATE(GrammarProfile, "subCategory"="PossessivePronoun", "superCategory"="Pronoun", "name"="Mine", "level"="A2")};

//3.YoursAsObject
(VC W{REGEXP("(?i)yours")}) {-> CREATE(GrammarProfile, "subCategory"="PossessivePronoun", "superCategory"="Pronoun", "name"="YoursAsObject", "level"="A2")};
(POS_VERB W{REGEXP("(?i)yours")}) {-> CREATE(GrammarProfile, "subCategory"="PossessivePronoun", "superCategory"="Pronoun", "name"="YoursAsObject", "level"="A2")};
(Preposition W{REGEXP("(?i)yours")}) {-> CREATE(GrammarProfile, "subCategory"="PossessivePronoun", "superCategory"="Pronoun", "name"="YoursAsObject", "level"="A2")};


//2.Reflexive
//4.SameSubjectAndObject
(Lemma{FEATURE("value", "enjoy")} W{REGEXP("(?i)myself|yourself")}) {-> CREATE(GrammarProfile, "subCategory"="ReflexivePronoun", "superCategory"="Pronoun", "name"="SameSubjectAndObject", "level"="A2")};
(Lemma{FEATURE("value", "buy")} W{REGEXP("(?i)myself|yourself")}) {-> CREATE(GrammarProfile, "subCategory"="ReflexivePronoun", "superCategory"="Pronoun", "name"="SameSubjectAndObject", "level"="A2")};


//3.SubjectObject
//5.SubjectEllipsisAfterHope
(W{REGEXP("(?i)hope")}) {-> CREATE(GrammarProfile, "subCategory"="SubjectObjectPronoun", "superCategory"="Pronoun", "name"="SubjectEllipsisAfterHope", "level"="A2")};

//6.SubjectEmptyIt
(W{REGEXP("(?i)it")} Be) {-> CREATE(GrammarProfile, "subCategory"="SubjectObjectPronoun", "superCategory"="Pronoun", "name"="SubjectEmptyIt", "level"="A2")};


//4.Demonstratives
//7.This
(W{REGEXP("(?i)this")}) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesPronoun", "superCategory"="Pronoun", "name"="This", "level"="A2")};

//8.ThisPointing
(W{REGEXP("(?i)this")}) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesPronoun", "superCategory"="Pronoun", "name"="ThisPointing", "level"="A2")};

//9.ThisAlreadyMentioned
(W{REGEXP("(?i)this")}) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesPronoun", "superCategory"="Pronoun", "name"="ThisAlreadyMentioned", "level"="A2")};

//10.ThisNow
(W{REGEXP("(?i)this")}) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesPronoun", "superCategory"="Pronoun", "name"="ThisNow", "level"="A2")};

//11.That
(W{REGEXP("(?i)That")}) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesPronoun", "superCategory"="Pronoun", "name"="That", "level"="A2")};

//12.ThatAlreadyMentioned
(W{REGEXP("(?i)That")}) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesPronoun", "superCategory"="Pronoun", "name"="ThatAlreadyMentioned", "level"="A2")};

//13.ResponseTokensWithThats
(W{REGEXP("(?i)That")} Be) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesPronoun", "superCategory"="Pronoun", "name"="ResponseTokensWithThats", "level"="A2")};

//14.Closing
(W{REGEXP("(?i)That")} Be W{REGEXP("(?i)all")}) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesPronoun", "superCategory"="Pronoun", "name"="Closing", "level"="A2")};



//5.Quantity
//15.SomeAndAny
(W{REGEXP("(?i)some")}) {-> CREATE(GrammarProfile, "subCategory"="QuantityPronoun", "superCategory"="Pronoun", "name"="SomeAndAny", "level"="A2")};
(W{REGEXP("(?i)any")}) {-> CREATE(GrammarProfile, "subCategory"="QuantityPronoun", "superCategory"="Pronoun", "name"="SomeAndAny", "level"="A2")};

//16.SomeAsSubjectAndObject
(W{REGEXP("(?i)some")} VC) {-> CREATE(GrammarProfile, "subCategory"="QuantityPronoun", "superCategory"="Pronoun", "name"="SomeAsSubjectAndObject", "level"="A2")};
(VC W{REGEXP("(?i)some")}) {-> CREATE(GrammarProfile, "subCategory"="QuantityPronoun", "superCategory"="Pronoun", "name"="SomeAsSubjectAndObject", "level"="A2")};

//17.AnyAsObject
(VC W{REGEXP("(?i)any")}) {-> CREATE(GrammarProfile, "subCategory"="QuantityPronoun", "superCategory"="Pronoun", "name"="AnyAsObject", "level"="A2")};

//18.WithOfObjectPronoun
( W{REGEXP("(?i)all")} W{REGEXP("(?i)of")} POS_PRON) {-> CREATE(GrammarProfile, "subCategory"="QuantityPronoun", "superCategory"="Pronoun", "name"="WithOfObjectPronoun", "level"="A2")};
( W{REGEXP("(?i)both")} W{REGEXP("(?i)of")} POS_PRON) {-> CREATE(GrammarProfile, "subCategory"="QuantityPronoun", "superCategory"="Pronoun", "name"="WithOfObjectPronoun", "level"="A2")};


//6.Substitution, one, ones, none
//19.One
(W{REGEXP("(?i)one")}) {-> CREATE(GrammarProfile, "subCategory"="SubstitutionPronoun", "superCategory"="Pronoun", "name"="One", "level"="A2")};

//20.PreModifying
(Determiner POS_ADJ W{REGEXP("(?i)one")}) {-> CREATE(GrammarProfile, "subCategory"="SubstitutionPronoun", "superCategory"="Pronoun", "name"="PreModifying", "level"="A2")};

//21.PostModifyingSpecifying
(W{REGEXP("(?i)one")} POS_ADJ W{REGEXP("(?i)one")} # PM) {-> CREATE(GrammarProfile, "subCategory"="SubstitutionPronoun", "superCategory"="Pronoun", "name"="PostModifyingSpecifying", "level"="A2")};
(W{REGEXP("(?i)one")}  W{REGEXP("(?i)one")} # PM) {-> CREATE(GrammarProfile, "subCategory"="SubstitutionPronoun", "superCategory"="Pronoun", "name"="PostModifyingSpecifying", "level"="A2")};


//7.Indefinite - thing, -one, -body etc
//22.ObjectOrComplement
(VC IndefinitePronoun) {-> CREATE(GrammarProfile, "subCategory"="IndefinitePronoun", "superCategory"="Pronoun", "name"="ObjectOrComplement", "level"="A2")};
(Preposition IndefinitePronoun) {-> CREATE(GrammarProfile, "subCategory"="IndefinitePronoun", "superCategory"="Pronoun", "name"="ObjectOrComplement", "level"="A2")};

//23.Subject
(W{REGEXP("(?i)someone")} VC) {-> CREATE(GrammarProfile, "subCategory"="IndefinitePronoun", "superCategory"="Pronoun", "name"="Subject", "level"="A2")};
(W{REGEXP("(?i)everyone")} VC) {-> CREATE(GrammarProfile, "subCategory"="IndefinitePronoun", "superCategory"="Pronoun", "name"="Subject", "level"="A2")};

//24.NegativeAnything
(Not # W{REGEXP("(?i)anything")}) {-> CREATE(GrammarProfile, "subCategory"="IndefinitePronoun", "superCategory"="Pronoun", "name"="NegativeAnything", "level"="A2")};

//25.WithAdjectiveSpecifying
(W{REGEXP("(?i)something")} POS_ADJ) {-> CREATE(GrammarProfile, "subCategory"="IndefinitePronoun", "superCategory"="Pronoun", "name"="WithAdjectiveSpecifying", "level"="A2")};
(W{REGEXP("(?i)anything")} POS_ADJ) {-> CREATE(GrammarProfile, "subCategory"="IndefinitePronoun", "superCategory"="Pronoun", "name"="WithAdjectiveSpecifying", "level"="A2")};

//26.WithToInfinitiveSpecifying
(W{REGEXP("(?i)something")} ToDo) {-> CREATE(GrammarProfile, "subCategory"="IndefinitePronoun", "superCategory"="Pronoun", "name"="WithToInfinitiveSpecifying", "level"="A2")};
(W{REGEXP("(?i)anything")} ToDo) {-> CREATE(GrammarProfile, "subCategory"="IndefinitePronoun", "superCategory"="Pronoun", "name"="WithToInfinitiveSpecifying", "level"="A2")};

//27.WithElse
(IndefinitePronoun W{REGEXP("(?i)else")}) {-> CREATE(GrammarProfile, "subCategory"="IndefinitePronoun", "superCategory"="Pronoun", "name"="WithElse", "level"="A2")};

//28.SomethingInVagueExpressions
(W{REGEXP("(?i)something")}) {-> CREATE(GrammarProfile, "subCategory"="IndefinitePronoun", "superCategory"="Pronoun", "name"="SomethingInVagueExpressions", "level"="A2")};


//8.GenericUse
//29.YouGenral
(W{REGEXP("(?i)you")}) {-> CREATE(GrammarProfile, "subCategory"="GenericUsePronoun", "superCategory"="Pronoun", "name"="YouGenral", "level"="A2")};



//SCRIPT A2_Level.A2_Adjectives;

//1.Combining
//1.CombiningTwoAdjectivesWithBut
(POS_ADJ W{REGEXP("(?i)but")} POS_ADJ) {-> CREATE(GrammarProfile, "subCategory"="CombiningAdjective", "superCategory"="Adjective", "name"="CombiningTwoAdjectivesWithBut", "level"="A2")} ; 


//2.Comparatives
//2.ErComparatives
(POS{FEATURE("PosValue", "JJR")}) {-> CREATE(GrammarProfile, "subCategory"="ComparativesAdjective", "superCategory"="Adjective", "name"="ErComparatives", "level"="A2")} ; 

//3.IerComparatives
(POS{FEATURE("PosValue", "JJR")}) {-> CREATE(GrammarProfile, "subCategory"="ComparativesAdjective", "superCategory"="Adjective", "name"="IerComparatives", "level"="A2")} ; 

//4.BeforeNounsComparatives
(Comparative POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="ComparativesAdjective", "superCategory"="Adjective", "name"="BeforeNounsComparatives", "level"="A2")} ; 

//5.ComplementOfBeComparatives
(Be Comparative) {-> CREATE(GrammarProfile, "subCategory"="ComparativesAdjective", "superCategory"="Adjective", "name"="ComplementOfBeComparatives", "level"="A2")} ; 

//6.DoubleConsonantErComparatives
(POS{FEATURE("PosValue", "JJR")}) {-> CREATE(GrammarProfile, "subCategory"="ComparativesAdjective", "superCategory"="Adjective", "name"="DoubleConsonantErComparatives", "level"="A2")} ; 

//7.EndingInER
(POS{FEATURE("PosValue", "JJR")}) {-> CREATE(GrammarProfile, "subCategory"="ComparativesAdjective", "superCategory"="Adjective", "name"="EndingInER", "level"="A2")} ; 

//8.IrregularComparatives
(IrregularComparatives) {-> CREATE(GrammarProfile, "subCategory"="ComparativesAdjective", "superCategory"="Adjective", "name"="IrregularComparatives", "level"="A2")} ; 

//9.WithMoreComparatives
(W{REGEXP("(?i)more")}  POS_ADJ) {-> CREATE(GrammarProfile, "subCategory"="ComparativesAdjective", "superCategory"="Adjective", "name"="WithMoreComparatives", "level"="A2")} ; 

//10.WithThanComparatives
(Comparative W{REGEXP("(?i)than")}) {-> CREATE(GrammarProfile, "subCategory"="ComparativesAdjective", "superCategory"="Adjective", "name"="WithThanComparatives", "level"="A2")} ; 


//3.Modifying
//11.WithDegreeAdverbsModifying
(Degree POS_ADJ) {-> CREATE(GrammarProfile, "subCategory"="ModifyingAdjective", "superCategory"="Adjective", "name"="WithDegreeAdverbsModifying", "level"="A2")} ; 

//12.WithPrepositionalPhraseModifying
(POS_ADJ PrepositionPhrase) {-> CREATE(GrammarProfile, "subCategory"="ModifyingAdjective", "superCategory"="Adjective", "name"="WithPrepositionalPhraseModifying", "level"="A2")} ; 

//13.WithTooModifying
(W{REGEXP("(?i)too")} POS_ADJ) {-> CREATE(GrammarProfile, "subCategory"="ModifyingAdjective", "superCategory"="Adjective", "name"="WithTooModifying", "level"="A2")} ; 

//14.WithTooPrepositionalPhraseModifying
(W{REGEXP("(?i)too")} POS_ADJ PrepositionPhrase) {-> CREATE(GrammarProfile, "subCategory"="ModifyingAdjective", "superCategory"="Adjective", "name"="WithTooPrepositionalPhraseModifying", "level"="A2")} ; 



//4.Position
//15.LimitingAdjectivesPosition
(W{REGEXP("(?i)main")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="PositionAdjective", "superCategory"="Adjective", "name"="LimitingAdjectivesPosition", "level"="A2")} ; 
(W{REGEXP("(?i)only")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="PositionAdjective", "superCategory"="Adjective", "name"="LimitingAdjectivesPosition", "level"="A2")} ; 

//16.PredicativeWithBePosition
(Be POS_ADJ) {-> CREATE(GrammarProfile, "subCategory"="PositionAdjective", "superCategory"="Adjective", "name"="PredicativeWithBePosition", "level"="A2")} ; 

//17.PredicativeWithLinkingVerbsPosition
(Lemma{FEATURE("value", "feel")} POS_ADJ) {-> CREATE(GrammarProfile, "subCategory"="PositionAdjective", "superCategory"="Adjective", "name"="PredicativeWithLinkingVerbsPosition", "level"="A2")} ; 
(Lemma{FEATURE("value", "look")} POS_ADJ) {-> CREATE(GrammarProfile, "subCategory"="PositionAdjective", "superCategory"="Adjective", "name"="PredicativeWithLinkingVerbsPosition", "level"="A2")} ; 


//5.Superlatives
//18.ComplexNounPhrasesSuperlatives
(Superlative POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="SuperlativesAdjective", "superCategory"="Adjective", "name"="ComplexNounPhrasesSuperlatives", "level"="A2")}; 

//19.WithInNounSuperlatives
(Superlative POS_NOUN W{REGEXP("(?i)in")} NC) {-> CREATE(GrammarProfile, "subCategory"="SuperlativesAdjective", "superCategory"="Adjective", "name"="WithInNounSuperlatives", "level"="A2")}; 

//20.WithOfNounSuperlatives
(Superlative POS_NOUN W{REGEXP("(?i)of")} NC) {-> CREATE(GrammarProfile, "subCategory"="SuperlativesAdjective", "superCategory"="Adjective", "name"="WithOfNounSuperlatives", "level"="A2")}; 

//21.EllipsisWithTheSuperlatives
(Superlative PM) {-> CREATE(GrammarProfile, "subCategory"="SuperlativesAdjective", "superCategory"="Adjective", "name"="EllipsisWithTheSuperlatives", "level"="A2")}; 

//22.WithEst1Superlatives
(POS{FEATURE("PosValue", "JJS")}) {-> CREATE(GrammarProfile, "subCategory"="SuperlativesAdjective", "superCategory"="Adjective", "name"="WithEst1Superlatives", "level"="A2")}; 

//23.WithEst2Superlatives
(POS{FEATURE("PosValue", "JJS")}) {-> CREATE(GrammarProfile, "subCategory"="SuperlativesAdjective", "superCategory"="Adjective", "name"="WithEst2Superlatives", "level"="A2")}; 

//24.WithEst3Superlatives
(POS{FEATURE("PosValue", "JJS")}) {-> CREATE(GrammarProfile, "subCategory"="SuperlativesAdjective", "superCategory"="Adjective", "name"="WithEst3Superlatives", "level"="A2")}; 

//25.WithMyOrYourSuperlatives
(W{REGEXP("(?i)your")} POS{FEATURE("PosValue", "JJS")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="SuperlativesAdjective", "superCategory"="Adjective", "name"="WithMyOrYourSuperlatives", "level"="A2")}; 
(W{REGEXP("(?i)my")} POS{FEATURE("PosValue", "JJS")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="SuperlativesAdjective", "superCategory"="Adjective", "name"="WithMyOrYourSuperlatives", "level"="A2")}; 

//26.WithStSuperlatives
(POS{FEATURE("PosValue", "JJS")}) {-> CREATE(GrammarProfile, "subCategory"="SuperlativesAdjective", "superCategory"="Adjective", "name"="WithStSuperlatives", "level"="A2")}; 

//27.WithTheSuperlatives
(W{REGEXP("(?i)the")} POS{FEATURE("PosValue", "JJS")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="SuperlativesAdjective", "superCategory"="Adjective", "name"="WithTheSuperlatives", "level"="A2")}; 

//28.WithTheMostSuperlatives
(W{REGEXP("(?i)the")} W{REGEXP("(?i)most")}  POS_ADJ POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="SuperlativesAdjective", "superCategory"="Adjective", "name"="WithTheMostSuperlatives", "level"="A2")}; 




//SCRIPT A2_Level.A2_Prepositions;

//1.Prepositions
//1.SimplePrepositions
(SimplePreposition) {-> CREATE(GrammarProfile, "subCategory"="Prepositions", "superCategory"="Preposition", "name"="SimplePrepositions", "level"="A2")};

//2.ComplexPrepositions
(ComplexPreposition) {-> CREATE(GrammarProfile, "subCategory"="Prepositions", "superCategory"="Preposition", "name"="ComplexPrepositions", "level"="A2")};

//3.JustPrepositions
(W{REGEXP("(?i)just")} Preposition) {-> CREATE(GrammarProfile, "subCategory"="Prepositions", "superCategory"="Preposition", "name"="JustPrepositions", "level"="A2")};

//4.IngPrepositions
(Preposition Doing) {-> CREATE(GrammarProfile, "subCategory"="Prepositions", "superCategory"="Preposition", "name"="IngPrepositions", "level"="A2")};

//5.StrandingPrepositions
(POS_VERB Preposition PERIOD) {-> CREATE(GrammarProfile, "subCategory"="Prepositions", "superCategory"="Preposition", "name"="StrandingPrepositions", "level"="A2")};



//SCRIPT A2_Level.A2_Adverbs;

//1.AdverbsAsModifiers
//1.TimeAdverbAsModifiers
(TimeAdv) {-> CREATE(GrammarProfile, "subCategory"="AdverbsAsModifiers", "superCategory"="Adverb", "name"="TimeAdverbAsModifiers", "level"="A2")};

//2.FrequencyAdverbAsModifiers
(Frequency) {-> CREATE(GrammarProfile, "subCategory"="AdverbsAsModifiers", "superCategory"="Adverb", "name"="FrequencyAdverbAsModifiers", "level"="A2")};

//3.DegreeWithAdjectivesAdverbAsModifiers
(Degree POS_ADJ) {-> CREATE(GrammarProfile, "subCategory"="AdverbsAsModifiers", "superCategory"="Adverb", "name"="DegreeWithAdjectivesAdverbAsModifiers", "level"="A2")};

//4.DegreeWithVerbsAdverbAsModifiers
(VC NC Degree) {-> CREATE(GrammarProfile, "subCategory"="AdverbsAsModifiers", "superCategory"="Adverb", "name"="DegreeWithVerbsAdverbAsModifiers", "level"="A2")};
(VC Degree) {-> CREATE(GrammarProfile, "subCategory"="AdverbsAsModifiers", "superCategory"="Adverb", "name"="DegreeWithVerbsAdverbAsModifiers", "level"="A2")};

//5.MannerAdverbAsModifiers
(Manner) {-> CREATE(GrammarProfile, "subCategory"="AdverbsAsModifiers", "superCategory"="Adverb", "name"="MannerAdverbAsModifiers", "level"="A2")};

//6.LinkingAdverbAsModifiers
(Linking) {-> CREATE(GrammarProfile, "subCategory"="AdverbsAsModifiers", "superCategory"="Adverb", "name"="LinkingAdverbAsModifiers", "level"="A2")};

//7.FocusAdverbAsModifiers
(Focus) {-> CREATE(GrammarProfile, "subCategory"="AdverbsAsModifiers", "superCategory"="Adverb", "name"="FocusAdverbAsModifiers", "level"="A2")};

//8.SequencingAdverbAsModifiers
(Sequencing) {-> CREATE(GrammarProfile, "subCategory"="AdverbsAsModifiers", "superCategory"="Adverb", "name"="FocusAdverbAsModifiers", "level"="A2")};

//9.CertraintyAdverbAsModifiers
(Certainty) {-> CREATE(GrammarProfile, "subCategory"="AdverbsAsModifiers", "superCategory"="Adverb", "name"="CertaintyAdverbAsModifiers", "level"="A2")};

//10.StanceAdverbAsModifiers
(Stance) {-> CREATE(GrammarProfile, "subCategory"="AdverbsAsModifiers", "superCategory"="Adverb", "name"="StanceAdverbAsModifiers", "level"="A2")};


//2.AdverbsAndAdverbPhrases: types and meanings
//11.DegreeModifyingAdjectives
(Degree POS_ADJ) {-> CREATE(GrammarProfile, "subCategory"="AdverbsAndAdverbPhrases", "superCategory"="Adverb", "name"="DegreeModifyingAdjectives", "level"="A2")};

//12.MannerModifyingVerbs
(VC NC Manner) {-> CREATE(GrammarProfile, "subCategory"="AdverbsAndAdverbPhrases", "superCategory"="Adverb", "name"="MannerModifyingVerbs", "level"="A2")};
(VC Manner) {-> CREATE(GrammarProfile, "subCategory"="AdverbsAndAdverbPhrases", "superCategory"="Adverb", "name"="MannerModifyingVerbs", "level"="A2")};

//13.TimrAndSequencingModifyingClauses
(TimeAdv) {-> CREATE(GrammarProfile, "subCategory"="AdverbsAndAdverbPhrases", "superCategory"="Adverb", "name"="TimrAndSequencingModifyingClauses", "level"="A2")};
(Sequencing) {-> CREATE(GrammarProfile, "subCategory"="AdverbsAndAdverbPhrases", "superCategory"="Adverb", "name"="TimrAndSequencingModifyingClauses", "level"="A2")};


//3.Position
//14.DegreeBeforeAdjectivesPosition
(Degree POS_ADJ) {-> CREATE(GrammarProfile, "subCategory"="PositionAdverb", "superCategory"="Adverb", "name"="DegreeBeforeAdjectivesPosition", "level"="A2")};

//15.FrontPosition
(Adverb NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="PositionAdverb", "superCategory"="Adverb", "name"="FrontPosition", "level"="A2")};
(Adverb POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="PositionAdverb", "superCategory"="Adverb", "name"="FrontPosition", "level"="A2")};

//16.MidPosition
(NC Adverb POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="PositionAdverb", "superCategory"="Adverb", "name"="MidPosition", "level"="A2")};
(NC ModalVerb Adverb POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="PositionAdverb", "superCategory"="Adverb", "name"="MidPosition", "level"="A2")};
(NC Have Adverb Done) {-> CREATE(GrammarProfile, "subCategory"="PositionAdverb", "superCategory"="Adverb", "name"="MidPosition", "level"="A2")};

//17.EndPositionManner
(VC NC Adverb) {-> CREATE(GrammarProfile, "subCategory"="PositionAdverb", "superCategory"="Adverb", "name"="EndPositionManner", "level"="A2")};

//18.DegreeEndPosition
(VC NC Degree) {-> CREATE(GrammarProfile, "subCategory"="PositionAdverb", "superCategory"="Adverb", "name"="DegreeEndPosition", "level"="A2")};

//19.SentenceAdverbFrontPosition
(W{REGEXP("(?i)actually")}) {-> CREATE(GrammarProfile, "subCategory"="PositionAdverb", "superCategory"="Adverb", "name"="SentenceAdverbFrontPosition", "level"="A2")};
(W{REGEXP("(?i)unfortunately")} COMMA) {-> CREATE(GrammarProfile, "subCategory"="PositionAdverb", "superCategory"="Adverb", "name"="SentenceAdverbFrontPosition", "level"="A2")};
(W{REGEXP("(?i)first")} COMMA) {-> CREATE(GrammarProfile, "subCategory"="PositionAdverb", "superCategory"="Adverb", "name"="SentenceAdverbFrontPosition", "level"="A2")};


//4.AdverbPhrases - form
//20.AdverbAdverb
(AdverbModifyingAdverb Adverb) {-> CREATE(GrammarProfile, "subCategory"="AdverbPhrases", "superCategory"="Adverb", "name"="AdverbAdverb", "level"="A2")};


//SCRIPT A2_Level.A2_Determiners;


//1.Articles
//1.TheAdjectivesSpecifying
(W{REGEXP("(?i)the")} POS_ADJ POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="ArticlesDeterminer", "superCategory"="Determiner", "name"="TheAdjectivesSpecifying", "level"="A2")};

//2.TheSuperlatives.
(Superlative POS_NOUN POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="ArticlesDeterminer", "superCategory"="Determiner", "name"="TheSuperlatives", "level"="A2")};
(Superlative POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="ArticlesDeterminer", "superCategory"="Determiner", "name"="TheSuperlatives", "level"="A2")};


//2.Demonstratives
//3.ThisWithUncountableNouns
(W{REGEXP("(?i)this")} UncountableNoun) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesDeterminer", "superCategory"="Determiner", "name"="ThisWithUncountableNouns", "level"="A2")};

//4.ThisPointing
(W{REGEXP("(?i)this")}) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesDeterminer", "superCategory"="Determiner", "name"="ThisPointing", "level"="A2")};

//5.Pointing
(W{REGEXP("(?i)this")}) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesDeterminer", "superCategory"="Determiner", "name"="Pointing", "level"="A2")};

//6.ThisAlreadyMentioned
(W{REGEXP("(?i)this")}) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesDeterminer", "superCategory"="Determiner", "name"="ThisAlreadyMentioned", "level"="A2")};

//7.That
(W{REGEXP("(?i)that")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesDeterminer", "superCategory"="Determiner", "name"="That", "level"="A2")};

//8.ThatPointing
(W{REGEXP("(?i)that")}) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesDeterminer", "superCategory"="Determiner", "name"="ThatPointing", "level"="A2")};

//9.ThatAlreadyMentioned
(W{REGEXP("(?i)that")}) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesDeterminer", "superCategory"="Determiner", "name"="ThatAlreadyMentioned", "level"="A2")};

//10.These
(W{REGEXP("(?i)these")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesDeterminer", "superCategory"="Determiner", "name"="These", "level"="A2")};

//11.ThesePointing
(W{REGEXP("(?i)these")}) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesDeterminer", "superCategory"="Determiner", "name"="ThesePointing", "level"="A2")};

//12.TheseAlreadyMentioned
(W{REGEXP("(?i)these")}) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesDeterminer", "superCategory"="Determiner", "name"="TheseAlreadyMentioned", "level"="A2")};

//13.Those
(W{REGEXP("(?i)those")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesDeterminer", "superCategory"="Determiner", "name"="Those", "level"="A2")};

//14.ThoseAlreadyMentioned
(W{REGEXP("(?i)those")}) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesDeterminer", "superCategory"="Determiner", "name"="ThoseAlreadyMentioned", "level"="A2")};

//15.ThosePointing
(W{REGEXP("(?i)those")}) {-> CREATE(GrammarProfile, "subCategory"="DemonstrativesDeterminer", "superCategory"="Determiner", "name"="ThosePointing", "level"="A2")};


//3.Possessives
//16.SingularNounS
(POS{FEATURE("PosValue", "NNP")} POS{FEATURE("PosValue", "POS")})  {-> CREATE(GrammarProfile, "subCategory"="PossessivesDeterminer", "superCategory"="Determiner", "name"="SingularNounS", "level"="A2")};
(POS{FEATURE("PosValue", "NN")} POS{FEATURE("PosValue", "POS")})  {-> CREATE(GrammarProfile, "subCategory"="PossessivesDeterminer", "superCategory"="Determiner", "name"="SingularNounS", "level"="A2")};

//17.WithQuantifyingDeterminersOf
(DeterminerOf POS{FEATURE("PosValue", "PRP$")} POS_NOUN)  {-> CREATE(GrammarProfile, "subCategory"="PossessivesDeterminer", "superCategory"="Determiner", "name"="WithQuantifyingDeterminersOf", "level"="A2")};


//4.Quantity
//18.WithPluralNounsQuantity
(DeterminerWithPluralNouns POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="QuantityDeterminer", "superCategory"="Determiner", "name"="WithPluralNounsQuantity", "level"="A2")};

//19.WithPluralAndUncountableNounsQuantity
(DeterminerWithPluralAndUncountableNouns POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="QuantityDeterminer", "superCategory"="Determiner", "name"="WithPluralAndUncountableNounsQuantity", "level"="A2")};

//20.WithSingularNounsQuantity
(DeterminerWithSingularNouns POS_ADJ POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="QuantityDeterminer", "superCategory"="Determiner", "name"="WithSingularNounsQuantity", "level"="A2")};
(DeterminerWithSingularNouns POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="QuantityDeterminer", "superCategory"="Determiner", "name"="WithSingularNounsQuantity", "level"="A2")};

//21.MuchWithUncountableNounsNegativeQuantity
(Not POS_VERB W{REGEXP("(?i)much")} UncountableNoun) {-> CREATE(GrammarProfile, "subCategory"="QuantityDeterminer", "superCategory"="Determiner", "name"="MuchWithUncountableNounsNegativeQuantity", "level"="A2")};
(Not W{REGEXP("(?i)much")} UncountableNoun) {-> CREATE(GrammarProfile, "subCategory"="QuantityDeterminer", "superCategory"="Determiner", "name"="MuchWithUncountableNounsNegativeQuantity", "level"="A2")};

//22.ManyWithPluralNounsNegativeQuantity
(Not POS_VERB W{REGEXP("(?i)many")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="QuantityDeterminer", "superCategory"="Determiner", "name"="ManyWithPluralNounsNegativeQuantity", "level"="A2")};
(Not W{REGEXP("(?i)many")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="QuantityDeterminer", "superCategory"="Determiner", "name"="ManyWithPluralNounsNegativeQuantity", "level"="A2")};

//23.SoManyWithPluralNounsQuantity
(W{REGEXP("(?i)so")} W{REGEXP("(?i)many")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="QuantityDeterminer", "superCategory"="Determiner", "name"="SoManyWithPluralNounsQuantity", "level"="A2")};
(W{REGEXP("(?i)too")} W{REGEXP("(?i)many")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="QuantityDeterminer", "superCategory"="Determiner", "name"="SoManyWithPluralNounsQuantity", "level"="A2")};

//24.DeterminerOfDeterminerQuantity
(DeterminerOf Determiner POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="QuantityDeterminer", "superCategory"="Determiner", "name"="DeterminerOfDeterminerQuantity", "level"="A2")};



//SCRIPT A2_Level.A2_Modality;

//1.Adjectives
//1.BeSureClause
(W{REGEXP("(?i)I")} Be W{REGEXP("(?i)sure")}) {-> CREATE(GrammarProfile, "subCategory"="AdjectivesModality", "superCategory"="Modality", "name"="BeSureClause", "level"="A2")};


//2.Can
//2.PermissionCan
(Can POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Can", "superCategory"="Modality", "name"="PermissionCan", "level"="A2")};


//3.ExpressionsWithBe
//3.WillBeAbleTo
(Will Be W{REGEXP("(?i)able")} ToDo) {-> CREATE(GrammarProfile, "subCategory"="ExpressionsWithBe", "superCategory"="Modality", "name"="WillBeAbleTo", "level"="A2")};


//4.HaveGotTo
//4.AffirmativeHaveGotTo
(Lemma{FEATURE("value", "have")} W{REGEXP("(?i)got")} ToDo) {-> CREATE(GrammarProfile, "subCategory"="HaveGotTo", "superCategory"="Modality", "name"="AffirmativeHaveGotTo", "level"="A2")};
(Lemma{FEATURE("value", "have")}  ToDo) {-> CREATE(GrammarProfile, "subCategory"="HaveGotTo", "superCategory"="Modality", "name"="AffirmativeHaveGotTo", "level"="A2")};

//5.NegativeHaveGotTo
(Lemma{FEATURE("value", "have")} Not W{REGEXP("(?i)got")} ToDo) {-> CREATE(GrammarProfile, "subCategory"="HaveGotTo", "superCategory"="Modality", "name"="NegativeHaveGotTo", "level"="A2")};
(Lemma{FEATURE("value", "have")} Not ToDo) {-> CREATE(GrammarProfile, "subCategory"="HaveGotTo", "superCategory"="Modality", "name"="NegativeHaveGotTo", "level"="A2")};

//6.QuestionsHaveGotTo
(Do NC Have W{REGEXP("(?i)got")} ToDo) {-> CREATE(GrammarProfile, "subCategory"="HaveGotTo", "superCategory"="Modality", "name"="QuestionsHaveGotTo", "level"="A2")};
(Do NC Have ToDo) {-> CREATE(GrammarProfile, "subCategory"="HaveGotTo", "superCategory"="Modality", "name"="QuestionsHaveGotTo", "level"="A2")};

//7.ObligationHaveGotTo
(Have W{REGEXP("(?i)got")} ToDo) {-> CREATE(GrammarProfile, "subCategory"="HaveGotTo", "superCategory"="Modality", "name"="ObligationHaveGotTo", "level"="A2")};
(Have ToDo) {-> CREATE(GrammarProfile, "subCategory"="HaveGotTo", "superCategory"="Modality", "name"="ObligationHaveGotTo", "level"="A2")};


//5.May
//8.AffirmativeMay
(Lemma{FEATURE("value", "may")} POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="May", "superCategory"="Modality", "name"="AffirmativeMay", "level"="A2")};

//9.PossibilityMay
(May POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="May", "superCategory"="Modality", "name"="PossibilityMay", "level"="A2")};

 
//6.Might
//10.AffirmativeMight
(Lemma{FEATURE("value", "might")} POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Might", "superCategory"="Modality", "name"="AffirmativeMight", "level"="A2")};

//11.PossibilityMight
(Might POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Might", "superCategory"="Modality", "name"="PossibilityMight", "level"="A2")};


//7.Must
//12.AffirmativeMust
(Lemma{FEATURE("value", "must")} POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Must", "superCategory"="Modality", "name"="AffirmativeMust", "level"="A2")};

//13.NegativeMust
(Lemma{FEATURE("value", "must")} Not POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Must", "superCategory"="Modality", "name"="NegativeMust", "level"="A2")};

//14.ObligationAndNecessity
(POS_PRON Must POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Must", "superCategory"="Modality", "name"="ObligationAndNecessity", "level"="A2")};


//8.Shall
//15.AffirmativeShall
(Lemma{FEATURE("value", "shall")} POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Shall", "superCategory"="Modality", "name"="AffirmativeShall", "level"="A2")};

//16.QuestionsShall
(Shall NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Shall", "superCategory"="Modality", "name"="QuestionsShall", "level"="A2")};

//17.OffersShall
(Shall W{REGEXP("(?i)I")} POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Shall", "superCategory"="Modality", "name"="OffersShall", "level"="A2")};

//18.SuggestionsShall
(Shall W{REGEXP("(?i)we")} POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Shall", "superCategory"="Modality", "name"="SuggestionsShall", "level"="A2")};


//9.Should
//19.AffirmativeShould
(Lemma{FEATURE("value", "should")} POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Should", "superCategory"="Modality", "name"="AffirmativeShould", "level"="A2")};

//20.NegativeShould
(Lemma{FEATURE("value", "should")} Not POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Should", "superCategory"="Modality", "name"="NegativeShould", "level"="A2")};

//21.QuestionsShould
(Should NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Should", "superCategory"="Modality", "name"="QuestionsShould", "level"="A2")};

//22.AdviceShould
(Should POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Should", "superCategory"="Modality", "name"="AdviceShould", "level"="A2")};

//23.SuggestionsShould
(Should POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Should", "superCategory"="Modality", "name"="SuggestionsShould", "level"="A2")};



//10.Will
//24.AfterIfFutureSituations
(IfClause COMMA NC Will POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Will", "superCategory"="Modality", "name"="SuggestionsShould", "level"="A2")};

//25.NegativeWill
(Lemma{FEATURE("value", "will")} Not POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Will", "superCategory"="Modality", "name"="NegativeWill", "level"="A2")};

//26.QuestionsWill
(Will NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Will", "superCategory"="Modality", "name"="QuestionsWill", "level"="A2")};

//27.PlansAndIntentionsWill
(Will NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Will", "superCategory"="Modality", "name"="PlansAndIntentionsWill", "level"="A2")};

//28.WillngnessOffersWill
(Will POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Will", "superCategory"="Modality", "name"="WillngnessOffersWill", "level"="A2")};

//29.RequestsWill
(Will NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Will", "superCategory"="Modality", "name"="RequestsWill", "level"="A2")};


//11.Would
//30.AffirmativeWould
(Lemma{FEATURE("value", "would")} POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Would", "superCategory"="Modality", "name"="AffirmativeWould", "level"="A2")};

//31.NegativeWould
(Lemma{FEATURE("value", "would")} Not POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Would", "superCategory"="Modality", "name"="NegativeWould", "level"="A2")};

//32.QuestionsWithLikeWould
(Would W{REGEXP("(?i)you")} W{REGEXP("(?i)like")} ToDo) {-> CREATE(GrammarProfile, "subCategory"="Would", "superCategory"="Modality", "name"="QuestionsWithLikeWould", "level"="A2")};

//33.ImaginedSituationWould
(Would POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Would", "superCategory"="Modality", "name"="ImaginedSituationWould", "level"="A2")};

//34.SuggestionsWithItWouldBe
(W{REGEXP("(?i)it")} W{REGEXP("(?i)would")} W{REGEXP("(?i)be")}) {-> CREATE(GrammarProfile, "subCategory"="Would", "superCategory"="Modality", "name"="SuggestionsWithItWouldBe", "level"="A2")};

//35.WishesAndPreferencesWould
(Would W{REGEXP("(?i)prefer")} ToDo) {-> CREATE(GrammarProfile, "subCategory"="Would", "superCategory"="Modality", "name"="WishesAndPreferencesWould", "level"="A2")};
(Would W{REGEXP("(?i)love")} ToDo) {-> CREATE(GrammarProfile, "subCategory"="Would", "superCategory"="Modality", "name"="WishesAndPreferencesWould", "level"="A2")};


//12.Adverbs
//36.MidPositionHedgingOrEmphasis
(Be Adverb) {-> CREATE(GrammarProfile, "subCategory"="AdverbsModality", "superCategory"="Modality", "name"="MidPositionHedgingOrEmphasis", "level"="A2")};
(ModalVerb Adverb POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="AdverbsModality", "superCategory"="Modality", "name"="MidPositionHedgingOrEmphasis", "level"="A2")};
(Be Adverb Doing) {-> CREATE(GrammarProfile, "subCategory"="AdverbsModality", "superCategory"="Modality", "name"="MidPositionHedgingOrEmphasis", "level"="A2")};

//37.ClausePositionAdverbs
(W{REGEXP("(?i)maybe")}) {-> CREATE(GrammarProfile, "subCategory"="AdverbsModality", "superCategory"="Modality", "name"="ClausePositionAdverbs", "level"="A2")};
(W{REGEXP("(?i)perhaps")}) {-> CREATE(GrammarProfile, "subCategory"="AdverbsModality", "superCategory"="Modality", "name"="ClausePositionAdverbs", "level"="A2")};



//13.Could
//38.AffirmativeCould
(Lemma{FEATURE("value", "could")} POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Could", "superCategory"="Modality", "name"="AffirmativeCould", "level"="A2")};

//39.NegativeCould
(Lemma{FEATURE("value", "could")} Not POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Could", "superCategory"="Modality", "name"="NegativeCould", "level"="A2")};

//40.QuestionsCould
(Could NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Could", "superCategory"="Modality", "name"="QuestionsCould", "level"="A2")};

//41.AbilityCould
(Could POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Could", "superCategory"="Modality", "name"="AbilityCould", "level"="A2")};

//42.RequestsCould
(Could NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Could", "superCategory"="Modality", "name"="RequestsCould", "level"="A2")};

//43.SuggestionsCould
(Could POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Could", "superCategory"="Modality", "name"="SuggestionsCould", "level"="A2")};



//SCRIPT A2_Level.A2_Conjunctions;

//1.Subordinating
//1.SimpleSubordinatingConjunctions
(SimpleSubordinatingConjunction) {-> CREATE(GrammarProfile, "subCategory"="SubordinatingConjunction", "superCategory"="Conjunction", "name"="SimpleSubordinatingConjunctions", "level"="A2")};



//SCRIPT A2_Level.A2_DiscourseMarkers;

//1.DiscourseMarkersInWriting
//1.AsYouKnowOrganisingMarkingSharedKnowledge
(W{REGEXP("(?i)as")} W{REGEXP("(?i)you")} W{REGEXP("(?i)know")}) {-> CREATE(GrammarProfile, "subCategory"="DiscourseMarkersInWriting", "superCategory"="DiscourseMarker", "name"="AsYouKnowOrganisingMarkingSharedKnowledge", "level"="A2")};

//2.SoSummarisingInformal
(W{REGEXP("(?i)so")} COMMA) {-> CREATE(GrammarProfile, "subCategory"="DiscourseMarkersInWriting", "superCategory"="DiscourseMarker", "name"="SoSummarisingInformal", "level"="A2")};


//SCRIPT A2_Level.A2_Focus;

//1.Focus
//1.PrepositionalPhrasesFronting
(PrepositionPhrase) {-> CREATE(GrammarProfile, "subCategory"="Focus", "superCategory"="Focus", "name"="PrepositionalPhrasesFronting", "level"="A2")} ; 


//SCRIPT A2_Level.A2_Negation;

//1.Negation
//1.AuxiliaryVerbsBeHavePresentNegation
(W{REGEXP("(?i)am|is|are|have|has")} Not) {-> CREATE(GrammarProfile, "subCategory"="Negation", "superCategory"="Negation", "name"="AuxiliaryVerbsBeHavePresentNegation", "level"="A2")};

//2.AuxiliaryVerbDoPastNegation
(W{REGEXP("(?i)did")} Not) {-> CREATE(GrammarProfile, "subCategory"="Negation", "superCategory"="Negation", "name"="AuxiliaryVerbDoPastNegation", "level"="A2")};

//3.DoImperativesNegation
(W{REGEXP("(?i)don")} SPECIAL{REGEXP("'")} W{REGEXP("t")} POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Negation", "superCategory"="Negation", "name"="DoImperativesNegation", "level"="A2")};

//4/ModalVerbsNegation
(Lemma{FEATURE("value", "can")} Not POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Negation", "superCategory"="Negation", "name"="ModalVerbsNegation", "level"="A2")};
(Lemma{FEATURE("value", "will")} Not POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Negation", "superCategory"="Negation", "name"="ModalVerbsNegation", "level"="A2")};
(Lemma{FEATURE("value", "should")} Not POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="Negation", "superCategory"="Negation", "name"="ModalVerbsNegation", "level"="A2")};

//5.PronounsNegation
(Not POS_VERB W{REGEXP("(?i)any")}) {-> CREATE(GrammarProfile, "subCategory"="Negation", "superCategory"="Negation", "name"="PronounsNegation", "level"="A2")};
(Not POS_VERB W{REGEXP("(?i)many")}) {-> CREATE(GrammarProfile, "subCategory"="Negation", "superCategory"="Negation", "name"="PronounsNegation", "level"="A2")};
(Not POS_VERB W{REGEXP("(?i)anything")}) {-> CREATE(GrammarProfile, "subCategory"="Negation", "superCategory"="Negation", "name"="PronounsNegation", "level"="A2")};

//6.DeterminersNo
(W{REGEXP("(?i)no")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="Negation", "superCategory"="Negation", "name"="DeterminersNo", "level"="A2")};

//7.DeterminersAnyMuchMany
(Not POS_VERB W{REGEXP("(?i)any")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="Negation", "superCategory"="Negation", "name"="DeterminersAnyMuchMany", "level"="A2")};
(Not POS_VERB W{REGEXP("(?i)much")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="Negation", "superCategory"="Negation", "name"="DeterminersAnyMuchMany", "level"="A2")};
(Not POS_VERB W{REGEXP("(?i)many")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="Negation", "superCategory"="Negation", "name"="DeterminersAnyMuchMany", "level"="A2")};

(Not  W{REGEXP("(?i)any")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="Negation", "superCategory"="Negation", "name"="DeterminersAnyMuchMany", "level"="A2")};
(Not  W{REGEXP("(?i)much")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="Negation", "superCategory"="Negation", "name"="DeterminersAnyMuchMany", "level"="A2")};
(Not  W{REGEXP("(?i)many")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="Negation", "superCategory"="Negation", "name"="DeterminersAnyMuchMany", "level"="A2")};


//SCRIPT A2_Level.A2_Questions;

//1.Alternatives
//1.WordWord
(POS_NOUN W{REGEXP("(?i)or")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="AlternativesQuestion", "superCategory"="Question", "name"="WordWord", "level"="A2")};
(POS_ADJ W{REGEXP("(?i)or")} POS_ADJ) {-> CREATE(GrammarProfile, "subCategory"="AlternativesQuestion", "superCategory"="Question", "name"="WordWord", "level"="A2")};
(POS_VERB W{REGEXP("(?i)or")} POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="AlternativesQuestion", "superCategory"="Question", "name"="WordWord", "level"="A2")};


//2.Tags
//2.QuestionTags
(Do NC QUESTION) {-> CREATE(GrammarProfile, "subCategory"="TagsQuestion", "superCategory"="Question", "name"="QuestionTags", "level"="A2")};
(Be NC QUESTION) {-> CREATE(GrammarProfile, "subCategory"="TagsQuestion", "superCategory"="Question", "name"="QuestionTags", "level"="A2")};


//3.Wh
//3.MainVerbBeWH
(WHWord Be NC) {-> CREATE(GrammarProfile, "subCategory"="WhQuestion", "superCategory"="Question", "name"="MainVerbBeWH", "level"="A2")};

//4.WithAuxiliaryDoWH
(WHWord Do NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="WhQuestion", "superCategory"="Question", "name"="WithAuxiliaryDoWH", "level"="A2")};

//5.WithAuxiliaryHaveWH
(WHWord Have NC Done) {-> CREATE(GrammarProfile, "subCategory"="WhQuestion", "superCategory"="Question", "name"="WithAuxiliaryHaveWH", "level"="A2")};

//6.WithAuxiliaryBeWH
(WHWord Be NC Doing) {-> CREATE(GrammarProfile, "subCategory"="WhQuestion", "superCategory"="Question", "name"="WithAuxiliaryBeWH", "level"="A2")};

//7.ModalVerbsWH
(WHWord ModalVerb NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="WhQuestion", "superCategory"="Question", "name"="ModalVerbsWH", "level"="A2")};

//8.NegativeQuestionsSuggestionsWH
(W{REGEXP("(?i)why")} Dont NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="WhQuestion", "superCategory"="Question", "name"="NegativeQuestionsSuggestionsWH", "level"="A2")};


//4.YesNo
//9.MainVerbBeYesno
(Be NC) {-> CREATE(GrammarProfile, "subCategory"="YesNoQuestion", "superCategory"="Question", "name"="MainVerbBeYesno", "level"="A2")};

//10.ModalVerbsYesno
(ModalVerb NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="YesNoQuestion", "superCategory"="Question", "name"="ModalVerbsYesno", "level"="A2")};

//11.LexicalVerbsWithDoYesno
(Do NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="YesNoQuestion", "superCategory"="Question", "name"="LexicalVerbsWithDoYesno", "level"="A2")};

//12.AuxiliaryBeYesno
(Be NC Doing) {-> CREATE(GrammarProfile, "subCategory"="YesNoQuestion", "superCategory"="Question", "name"="AuxiliaryBeYesno", "level"="A2")};

//13.AuxiliaryHaveYesno
(Have NC Done) {-> CREATE(GrammarProfile, "subCategory"="Question", "superCategory"="Question", "name"="AuxiliaryHaveYesno", "level"="A2")};


//SCRIPT A2_Level.A2_Verbs;

//1.PhrasalPrepositional
//1.LookForwardTo
(Lemma{FEATURE("value", "look")} W{REGEXP("(?i)forward")} W{REGEXP("(?i)to")}) {-> CREATE(GrammarProfile, "subCategory"="PhrasalPrepositionalVerb", "superCategory"="Verb", "name"="LookForwardTo", "level"="A2")};


//2.PatternsThatClauses
//2.ReportingVerbsDirectObjectThatClause
(POS_VERB W{REGEXP("(?i)that")}) {-> CREATE(GrammarProfile, "subCategory"="PatternsThatClauses", "superCategory"="Verb", "name"="ReportingVerbsDirectObjectThatClause", "level"="A2")};

//3.VerbsDirectObjectClauseWithoutThat
(POS_VERB NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="PatternsThatClauses", "superCategory"="Verb", "name"="VerbsDirectObjectClauseWithoutThat", "level"="A2")};

//4.VerbsDirectObjectClause
(POS_VERB NC W{REGEXP("(?i)that")}) {-> CREATE(GrammarProfile, "subCategory"="PatternsThatClauses", "superCategory"="Verb", "name"="VerbsDirectObjectClause", "level"="A2")};
(POS_VERB NC) {-> CREATE(GrammarProfile, "subCategory"="PatternsThatClauses", "superCategory"="Verb", "name"="VerbsDirectObjectClause", "level"="A2")};


//3.Phrasal
//5.NoObjectPhrasal
(POS_VERB Particle) (W{-PARTOF(POS_NOUN)}) {-> CREATE(GrammarProfile,1, "subCategory"="PhrasalVerb", "superCategory"="Verb","name"="NoObjectPhrasal", "level"="A2")};
(POS_VERB Particle) (PM) {-> CREATE(GrammarProfile,1, "subCategory"="PhrasalVerb", "superCategory"="Verb","name"="NoObjectPhrasal", "level"="A2")};

//6.VerbPronounParticle
(POS_VERB NC Particle) {-> CREATE(GrammarProfile, "subCategory"="PhrasalVerb", "superCategory"="Verb", "name"="VerbPronounParticle", "level"="A2")};


//4.Types
//7.AuxiliaryVerbsHaveAndDo
(Have NC Done) {-> CREATE(GrammarProfile, "subCategory"="TypesVerb", "superCategory"="Verb", "name"="AuxiliaryVerbsHaveAndDo", "level"="A2")};
(Have  Done) {-> CREATE(GrammarProfile, "subCategory"="TypesVerb", "superCategory"="Verb", "name"="AuxiliaryVerbsHaveAndDo", "level"="A2")};

(Do) {-> CREATE(GrammarProfile, "subCategory"="TypesVerb", "superCategory"="Verb", "name"="AuxiliaryVerbsHaveAndDo", "level"="A2")};
(Do NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="TypesVerb", "superCategory"="Verb", "name"="AuxiliaryVerbsHaveAndDo", "level"="A2")};

//8.LinkingVerbsAdjective
(POS_VERB POS_ADJ) {-> CREATE(GrammarProfile, "subCategory"="TypesVerb", "superCategory"="Verb", "name"="LinkingVerbsAdjective", "level"="A2")};
(POS_VERB ADJC) {-> CREATE(GrammarProfile, "subCategory"="TypesVerb", "superCategory"="Verb", "name"="LinkingVerbsAdjective", "level"="A2")};

//9.ModalAuxiliaryVerbs
(ModalVerb POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="TypesVerb", "superCategory"="Verb", "name"="ModalAuxiliaryVerbs", "level"="A2")};

//10.SemiModalAuxiliaryVerbsHaveGotTo
(Have W{REGEXP("(?i)got")}ToDo) {-> CREATE(GrammarProfile, "subCategory"="TypesVerb", "superCategory"="Verb", "name"="SemiModalAuxiliaryVerbsHaveGotTo", "level"="A2")};
(Have ToDo) {-> CREATE(GrammarProfile, "subCategory"="TypesVerb", "superCategory"="Verb", "name"="SemiModalAuxiliaryVerbsHaveGotTo", "level"="A2")};


//5.PatternsWithToAndIng
//11.VerbToInfinitive
(POS_VERB ToDo) {-> CREATE(GrammarProfile, "subCategory"="PatternsWithToAndIng", "superCategory"="Verb", "name"="VerbToInfinitive", "level"="A2")};

//12.VerbsToInfinitiveOrIng
(POS_VERB ToDo) {-> CREATE(GrammarProfile, "subCategory"="PatternsWithToAndIng", "superCategory"="Verb", "name"="VerbsToInfinitiveOrIng", "level"="A2")};
(POS_VERB Doing) {-> CREATE(GrammarProfile, "subCategory"="PatternsWithToAndIng", "superCategory"="Verb", "name"="VerbsToInfinitiveOrIng", "level"="A2")};

//13.WouldLoveTo
(Would W{REGEXP("(?i)love")} ToDo) {-> CREATE(GrammarProfile, "subCategory"="PatternsWithToAndIng", "superCategory"="Verb", "name"="WouldLoveTo", "level"="A2")};

//14.EnjoyIng
(Lemma{FEATURE("value", "enjoy")} Doing) {-> CREATE(GrammarProfile, "subCategory"="PatternsWithToAndIng", "superCategory"="Verb", "name"="EnjoyIng", "level"="A2")};


//6.ThereIsAre
//15.ThereIsUncountable
(W{REGEXP("(?i)there")} W{REGEXP("(?i)is")} NC) {-> CREATE(GrammarProfile, "subCategory"="ThereIsAre", "superCategory"="Verb", "name"="ThereIsUncountable", "level"="A2")};

//16.ThereIsAreALotOf
(W{REGEXP("(?i)there")} Be W{REGEXP("(?i)a")} W{REGEXP("(?i)lot")} W{REGEXP("(?i)of")} POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="ThereIsAre", "superCategory"="Verb", "name"="ThereIsAreALotOf", "level"="A2")};


//7.Linking
//17.LinkingComplement
(POS_VERB POS_ADJ) {-> CREATE(GrammarProfile, "subCategory"="LinkingVerb", "superCategory"="Verb", "name"="LinkingComplement", "level"="A2")};
(POS_VERB ADJC) {-> CREATE(GrammarProfile, "subCategory"="LinkingVerb", "superCategory"="Verb", "name"="LinkingComplement", "level"="A2")};



//SCRIPT A2_Level.A2_Present;

//1.PresentContinuous
//1.NegativePresentContinuous
(W{REGEXP("(?i)am|is|are")} Not Doing) {-> CREATE(GrammarProfile, "subCategory"="PresentContinuous", "superCategory"="Present", "name"="NegativePresentContinuous", "level"="A2")};

//2.QuestionsPresentContinuous
(Is NC Doing) {-> CREATE(GrammarProfile, "subCategory"="PresentContinuous", "superCategory"="Present", "name"="QuestionsPresentContinuous", "level"="A2")};

//3.WithAdverbsOfIndefiniteFrequencyPresentContinuous
(Is Frequency Doing) {-> CREATE(GrammarProfile, "subCategory"="PresentContinuous", "superCategory"="Present", "name"="WithAdverbsOfIndefiniteFrequencyPresentContinuous", "level"="A2")};

//4.EventsInprogressPresentContinuous
(Is Doing) {-> CREATE(GrammarProfile, "subCategory"="PresentContinuous", "superCategory"="Present", "name"="EventsInprogressPresentContinuous", "level"="A2")};

//5.TemporarySituations
(Is Doing) {-> CREATE(GrammarProfile, "subCategory"="PresentContinuous", "superCategory"="Present", "name"="TemporarySituations", "level"="A2")};


//2.PresentSimple
//6.RealAndImaginedSituationsAfterIfPresentSimple
(W{REGEXP("(?i)If")} NC Present) {-> CREATE(GrammarProfile, "subCategory"="PresentSimple", "superCategory"="Present", "name"="RealAndImaginedSituationsAfterIfPresentSimple", "level"="A2")};

//7.AffirmativePresentSimple
(POS{FEATURE("PosValue", "VBZ")}) {-> CREATE(GrammarProfile, "subCategory"="PresentSimple", "superCategory"="Present", "name"="AffirmativePresentSimple", "level"="A2")};
(POS{FEATURE("PosValue", "VBP")}) {-> CREATE(GrammarProfile, "subCategory"="PresentSimple", "superCategory"="Present", "name"="AffirmativePresentSimple", "level"="A2")};

//8.IndirectQuestionsPresentSimple
(W{REGEXP("(?i)do")} W{REGEXP("(?i)you")} W{REGEXP("(?i)know")} WHWord) {-> CREATE(GrammarProfile, "subCategory"="PresentSimple", "superCategory"="Present", "name"="IndirectQuestionsPresentSimple", "level"="A2")};

//9.NegativePresentSimple
(Doesnt POS{FEATURE("PosValue", "VB")}) {-> CREATE(GrammarProfile, "subCategory"="PresentSimple", "superCategory"="Present", "name"="NegativePresentSimple", "level"="A2")};
(Dont POS{FEATURE("PosValue", "VB")}) {-> CREATE(GrammarProfile, "subCategory"="PresentSimple", "superCategory"="Present", "name"="NegativePresentSimple", "level"="A2")};

//10.QuestionsPresentSimple
(Does NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="PresentSimple", "superCategory"="Present", "name"="QuestionsPresentSimple", "level"="A2")};

//11.WithAdverbsOfIndefiniteFrequencyPresentSimple
(Frequency Present) {-> CREATE(GrammarProfile, "subCategory"="PresentSimple", "superCategory"="Present", "name"="WithAdverbsOfIndefiniteFrequencyPresentSimple", "level"="A2")};

//12.InstructionsAndDirectionsPresentSimple
(Present) {-> CREATE(GrammarProfile, "subCategory"="PresentSimple", "superCategory"="Present", "name"="InstructionsAndDirectionsPresentSimple", "level"="A2")};

//13.MentalProcessVerbsPresentSimple
(Lemma{FEATURE("value", "think")}) {-> CREATE(GrammarProfile, "subCategory"="PresentSimple", "superCategory"="Present", "name"="MentalProcessVerbsPresentSimple", "level"="A2")};
(Lemma{FEATURE("value", "hope")}) {-> CREATE(GrammarProfile, "subCategory"="PresentSimple", "superCategory"="Present", "name"="MentalProcessVerbsPresentSimple", "level"="A2")};
(Lemma{FEATURE("value", "know")}) {-> CREATE(GrammarProfile, "subCategory"="PresentSimple", "superCategory"="Present", "name"="MentalProcessVerbsPresentSimple", "level"="A2")};

//14.SuggestionsPresentSimple
(W{REGEXP("(?i)why")} W{REGEXP("(?i)don")} SPECIAL{REGEXP("'")} W{REGEXP("t")} W{REGEXP("(?i)you")}) {-> CREATE(GrammarProfile, "subCategory"="PresentSimple", "superCategory"="Present", "name"="SuggestionsPresentSimple", "level"="A2")};
(W{REGEXP("(?i)why")} W{REGEXP("(?i)don")} SPECIAL{REGEXP("'")} W{REGEXP("t")} W{REGEXP("(?i)we")}) {-> CREATE(GrammarProfile, "subCategory"="PresentSimple", "superCategory"="Present", "name"="SuggestionsPresentSimple", "level"="A2")};
(W{REGEXP("(?i)if")} W{REGEXP("(?i)you")} W{REGEXP("(?i)want")}) {-> CREATE(GrammarProfile, "subCategory"="PresentSimple", "superCategory"="Present", "name"="SuggestionsPresentSimple", "level"="A2")};
(W{REGEXP("(?i)if")} W{REGEXP("(?i)you")} W{REGEXP("(?i)like")}) {-> CREATE(GrammarProfile, "subCategory"="PresentSimple", "superCategory"="Present", "name"="SuggestionsPresentSimple", "level"="A2")};




//SCRIPT A2_Level.A2_Past;


//1.PastContinuous
//1.AffirmativePastContinuous
(W{REGEXP("(?i)was|were")}  Doing) {-> CREATE(GrammarProfile, "subCategory"="PastContinuous", "superCategory"="Past", "name"="AffirmativePastContinuous", "level"="A2")};

//2.WithAdverbsPastContinuous
(Was POS_ADV Doing) {-> CREATE(GrammarProfile, "subCategory"="PastContinuous", "superCategory"="Past", "name"="WithAdverbsPastContinuous", "level"="A2")};

//3.BackgrounEventsPastContinuous
(Was Doing) {-> CREATE(GrammarProfile, "subCategory"="PastContinuous", "superCategory"="Past", "name"="BackgrounEventsPastContinuous", "level"="A2")};

//4.EventsInProgressPastContinuous
(Was Doing) {-> CREATE(GrammarProfile, "subCategory"="PastContinuous", "superCategory"="Past", "name"="EventsInProgressPastContinuous", "level"="A2")};


//2.PastSimple
//5.AffirmativePastSimple
(POS{FEATURE("PosValue", "VBD")}) {-> CREATE(GrammarProfile, "subCategory"="PastSimple", "superCategory"="Past", "name"="AffirmativePastSimple", "level"="A2")};

//6.NegativePastSimple
(Didnt POS{FEATURE("PosValue", "VB")}) {-> CREATE(GrammarProfile, "subCategory"="PastSimple", "superCategory"="Past", "name"="NegativePastSimple", "level"="A2")};

//7.QuestionsPastSimple
(Did NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="PastSimple", "superCategory"="Past", "name"="QuestionsPastSimple", "level"="A2")};
(Did POS_PRON POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="PastSimple", "superCategory"="Past", "name"="QuestionsPastSimple", "level"="A2")};

//8.WithWhenPastSimple
(W{REGEXP("(?i)when")} NC Past) {-> CREATE(GrammarProfile, "subCategory"="PastSimple", "superCategory"="Past", "name"="WithWhenPastSimple", "level"="A2")};


//3.PresentPerfectSimple
//9.TimeWithForPresentPerfectSimple
(Hasnt Done NC W{REGEXP("(?i)for")} NC) {-> CREATE(GrammarProfile, "subCategory"="PresentPerfectSimple", "superCategory"="Past", "name"="TimeWithForPresentPerfectSimple", "level"="A2")};
(Hasnt Done NC W{REGEXP("(?i)for")} W{REGEXP("(?i)so")} NC) {-> CREATE(GrammarProfile, "subCategory"="PresentPerfectSimple", "superCategory"="Past", "name"="TimeWithForPresentPerfectSimple", "level"="A2")};
(Hasnt Done W{REGEXP("(?i)for")} NC) {-> CREATE(GrammarProfile, "subCategory"="PresentPerfectSimple", "superCategory"="Past", "name"="TimeWithForPresentPerfectSimple", "level"="A2")};
(Hasnt Done W{REGEXP("(?i)for")} W{REGEXP("(?i)so")} NC) {-> CREATE(GrammarProfile, "subCategory"="PresentPerfectSimple", "superCategory"="Past", "name"="TimeWithForPresentPerfectSimple", "level"="A2")};

//10.WithYetPresentPerfectSimple
(Hasnt Done NC W{REGEXP("(?i)yet")}) {-> CREATE(GrammarProfile, "subCategory"="PresentPerfectSimple", "superCategory"="Past", "name"="WithYetPresentPerfectSimple", "level"="A2")};
(Hasnt Done  W{REGEXP("(?i)yet")}) {-> CREATE(GrammarProfile, "subCategory"="PresentPerfectSimple", "superCategory"="Past", "name"="WithYetPresentPerfectSimple", "level"="A2")};

//11.AffirmativePresentPerfectSimple
(POS_PRON W{REGEXP("(?i)has|have")} Done ) {-> CREATE(GrammarProfile, "subCategory"="PresentPerfectSimple", "superCategory"="Past", "name"="AffirmativePresentPerfectSimple", "level"="A2")};

//12.NegativePresentPerfectSimple
(POS_PRON Hasnt Done ) {-> CREATE(GrammarProfile, "subCategory"="PresentPerfectSimple", "superCategory"="Past", "name"="NegativePresentPerfectSimple", "level"="A2")};

//13.QuestionsPresentPerfectSimple
(Has NC Done) {-> CREATE(GrammarProfile, "subCategory"="PresentPerfectSimple", "superCategory"="Past", "name"="QuestionsPresentPerfectSimple", "level"="A2")};

//14.WithAdverbsPresentPerfectSimple
(Has Adverb Done) {-> CREATE(GrammarProfile, "subCategory"="PresentPerfectSimple", "superCategory"="Past", "name"="WithAdverbsPresentPerfectSimple", "level"="A2")};

//15.ExperiencesPresentPerfectSimple
(Has Done) {-> CREATE(GrammarProfile, "subCategory"="PresentPerfectSimple", "superCategory"="Past", "name"="ExperiencesPresentPerfectSimple", "level"="A2")};



//SCRIPT A2_Level.A2_Future;

//1.FutureContinuous
//1.AffirmativeWithWill
(Lemma{FEATURE("value", "will")}  Be Doing) {-> CREATE(GrammarProfile, "subCategory"="FutureContinuous", "superCategory"="Future", "name"="AffirmativeWithWill", "level"="A2")};

//2.FutureArrangements
(Will Be Doing) {-> CREATE(GrammarProfile, "subCategory"="FutureContinuous", "superCategory"="Future", "name"="FutureArrangements", "level"="A2")};


//2.FutureWithWillAndShall
//3.AffirmativeShall
(POS_PRON Lemma{FEATURE("value", "shall")}  POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="FutureWithWillAndShall", "superCategory"="Future", "name"="AffirmativeShall", "level"="A2")};

//4.NegativeWill
(Lemma{FEATURE("value", "will")}  Not POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="FutureWithWillAndShall", "superCategory"="Future", "name"="NegativeWill", "level"="A2")};

//5.QuestionsWillShall
(WillShall NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="FutureWithWillAndShall", "superCategory"="Future", "name"="QuestionsWillShall", "level"="A2")};

//6.OffersWithShall
(Shall W{REGEXP("(?i)I")} POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="FutureWithWillAndShall", "superCategory"="Future", "name"="OffersWithShall", "level"="A2")};

//7.PlansAndIntentionsWithWill
(Will NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="FutureWithWillAndShall", "superCategory"="Future", "name"="PlansAndIntentionsWithWill", "level"="A2")};

//8.RequestsWithWill
(Will NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="FutureWithWillAndShall", "superCategory"="Future", "name"="RequestsWithWill", "level"="A2")};

//9.SuggestionsWithShall
(Shall W{REGEXP("(?i)we")} POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="FutureWithWillAndShall", "superCategory"="Future", "name"="SuggestionsWithShall", "level"="A2")};

//10.WillingnessWithWill
(Will POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="FutureWithWillAndShall", "superCategory"="Future", "name"="WillingnessWithWill", "level"="A2")};


//3.FutureWithBeGoingTo
//11.AffirmativeBeGoingTo
(W{REGEXP("(?i)am|is|are")} Going ToDo ) {-> CREATE(GrammarProfile, "subCategory"="FutureWithBeGoingTo", "superCategory"="Future", "name"="AffirmativeBeGoingTo", "level"="A2")};

//12.QuestionsBeGoingTo
(Is NC  Going ToDo ) {-> CREATE(GrammarProfile, "subCategory"="FutureWithBeGoingTo", "superCategory"="Future", "name"="QuestionsBeGoingTo", "level"="A2")};

//13.IntentionsBeGoingTo
(Is Going ToDo) {-> CREATE(GrammarProfile, "subCategory"="FutureWithBeGoingTo", "superCategory"="Future", "name"="IntentionsBeGoingTo", "level"="A2")};
(Is NC  Going ToDo ) {-> CREATE(GrammarProfile, "subCategory"="FutureWithBeGoingTo", "superCategory"="Future", "name"="IntentionsBeGoingTo", "level"="A2")};

//14.PredictionsWithBeBeGoingTo
(Is Going ToDo) {-> CREATE(GrammarProfile, "subCategory"="FutureWithBeGoingTo", "superCategory"="Future", "name"="PredictionsWithBeBeGoingTo", "level"="A2")};


//4.PresentContinuousForFutureUse
//15.FutureArrangementsPresentContinuous
(Is Doing) {-> CREATE(GrammarProfile, "subCategory"="PresentContinuousForFutureUse", "superCategory"="Future", "name"="FutureArrangementsPresentContinuous", "level"="A2")};

//16.QuestionsAboutTheFuturePresentContinuous
(Is NC Doing) {-> CREATE(GrammarProfile, "subCategory"="PresentContinuousForFutureUse", "superCategory"="Future", "name"="QuestionsAboutTheFuturePresentContinuous", "level"="A2")};


//5.PresentSimpleForFutureUse
//17.WithWhenPresentSimple
(W{REGEXP("(?i)when")} NC Present) {-> CREATE(GrammarProfile, "subCategory"="PresentSimpleForFutureUse", "superCategory"="Future", "name"="WithWhenPresentSimple", "level"="A2")};

//18.HopePresentSimple
(W{REGEXP("(?i)I")} W{REGEXP("(?i)hope")} NC Present) {-> CREATE(GrammarProfile, "subCategory"="PresentSimpleForFutureUse", "superCategory"="Future", "name"="HopePresentSimple", "level"="A2")};

//19.TimetablesAndPlansPresentSimple
(Present) {-> CREATE(GrammarProfile, "subCategory"="", "superCategory"="Future", "name"="TimetablesAndPlansPresentSimple", "level"="A2")};


//SCRIPT A2_Level.A2_Passives;

//1.Passives: form
//1.WithByToAddInformationPassives
(Be Done W{REGEXP("(?i)by")}) {-> CREATE(GrammarProfile, "subCategory"="Passives", "superCategory"="Passive", "name"="WithByToAddInformationPassives", "level"="A2")};

//2.PastSimpleAffirmativePassives
(W{REGEXP("(?i)was|were")} Done) {-> CREATE(GrammarProfile, "subCategory"="Passives", "superCategory"="Passive", "name"="PastSimpleAffirmativePassives", "level"="A2")};

//3.PresentSimpleAffirmativePassives
(W{REGEXP("(?i)am|is|are")}  Done) {-> CREATE(GrammarProfile, "subCategory"="Passives", "superCategory"="Passive", "name"="PresentSimpleAffirmativePassives", "level"="A2")};


//SCRIPT A2_Level.A2_ReportedSpeech;

//1.ReportedSpeech
//1.ReportedStatementsWithSayPronounShift
(Lemma{FEATURE("value", "say")}  W{REGEXP("(?i)that")}) {-> CREATE(GrammarProfile, "subCategory"="ReportedSpeech", "superCategory"="ReportedSpeech", "name"="ReportedStatementsWithSayPronounShift", "level"="A2")};

//2.ReportedStatementsWithTellPronounShift
(Lemma{FEATURE("value", "tell")}  NC W{REGEXP("(?i)that")}) {-> CREATE(GrammarProfile, "subCategory"="ReportedSpeech", "superCategory"="ReportedSpeech", "name"="ReportedStatementsWithTellPronounShift", "level"="A2")};


//SCRIPT A2_Level.A2_Clauses;

//1.Comparatives
//1.BeLikeNounOrPronoun
(Be W{REGEXP("(?i)like")} NC) {-> CREATE(GrammarProfile, "subCategory"="ComparativesClause", "superCategory"="Clause", "name"="BeLikeNounOrPronoun", "level"="A2")};

//2.Coordinated
//2.MultipleMainClausesInstructions(????)
(COMMA) {-> CREATE(GrammarProfile, "subCategory"="CoordinatedClause", "superCategory"="Clause", "name"="MultipleMainClausesInstructions", "level"="A2")};
(Conjunction) {-> CREATE(GrammarProfile, "subCategory"="CoordinatedClause", "superCategory"="Clause", "name"="MultipleMainClausesInstructions", "level"="A2")};


//3.Declarative
//3.NegativeDeclarativeWithHave
(Havent Done) {-> CREATE(GrammarProfile, "subCategory"="DeclarativeClause", "superCategory"="Clause", "name"="NegativeDeclarativeWithHave", "level"="A2")};
(Havent W{REGEXP("(?i)got")}) {-> CREATE(GrammarProfile, "subCategory"="DeclarativeClause", "superCategory"="Clause", "name"="NegativeDeclarativeWithHave", "level"="A2")};

//4.NegativeDeclarativeModalAuxiliaryVerbs
(ModalVerb  POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="DeclarativeClause", "superCategory"="Clause", "name"="NegativeDeclarativeModalAuxiliaryVerbs", "level"="A2")};


//4.Imperatives
//5.AffirmativeImperatives
(POS{FEATURE("PosValue", "VB")} NC Adverb) {-> CREATE(GrammarProfile, "subCategory"="ImperativesClause", "superCategory"="Clause", "name"="AffirmativeImperatives", "level"="A2")}; 
(POS{FEATURE("PosValue", "VB")} NC) {-> CREATE(GrammarProfile, "subCategory"="ImperativesClause", "superCategory"="Clause", "name"="AffirmativeImperatives", "level"="A2")}; 
(POS{FEATURE("PosValue", "VB")} Adverb) {-> CREATE(GrammarProfile, "subCategory"="ImperativesClause", "superCategory"="Clause", "name"="AffirmativeImperatives", "level"="A2")}; 
(POS{FEATURE("PosValue", "VB")} ) {-> CREATE(GrammarProfile, "subCategory"="ImperativesClause", "superCategory"="Clause", "name"="AffirmativeImperatives", "level"="A2")}; 

//6.InstructionsImperatives
(POS{FEATURE("PosValue", "VB")} NC) {-> CREATE(GrammarProfile, "subCategory"="ImperativesClause", "superCategory"="Clause", "name"="InstructionsImperatives", "level"="A2")}; 
(POS{FEATURE("PosValue", "VB")} ) {-> CREATE(GrammarProfile, "subCategory"="ImperativesClause", "superCategory"="Clause", "name"="InstructionsImperatives", "level"="A2")}; 

//7.ClosingsImperatives
(POS{FEATURE("PosValue", "VB")} NC Adverb) {-> CREATE(GrammarProfile, "subCategory"="ImperativesClause", "superCategory"="Clause", "name"="ClosingsImperatives", "level"="A2")}; 
(POS{FEATURE("PosValue", "VB")} NC ) {-> CREATE(GrammarProfile, "subCategory"="ImperativesClause", "superCategory"="Clause", "name"="ClosingsImperatives", "level"="A2")}; 
(POS{FEATURE("PosValue", "VB")} Adverb) {-> CREATE(GrammarProfile, "subCategory"="ImperativesClause", "superCategory"="Clause", "name"="ClosingsImperatives", "level"="A2")}; 
(POS{FEATURE("PosValue", "VB")} ) {-> CREATE(GrammarProfile, "subCategory"="ImperativesClause", "superCategory"="Clause", "name"="ClosingsImperatives", "level"="A2")}; 

(POS{FEATURE("PosValue", "VB")} PrepositionPhrase) {-> CREATE(GrammarProfile, "subCategory"="ImperativesClause", "superCategory"="Clause", "name"="ClosingsImperatives", "level"="A2")}; 

//8.NegativeImperatives
(Dont POS_VERB NC) {-> CREATE(GrammarProfile, "subCategory"="ImperativesClause", "superCategory"="Clause", "name"="NegativeImperatives", "level"="A2")}; 
(Dont POS_VERB ) {-> CREATE(GrammarProfile, "subCategory"="ImperativesClause", "superCategory"="Clause", "name"="NegativeImperatives", "level"="A2")}; 

//9.letsSuggestion
(W{REGEXP("(?i)let")} SPECIAL{REGEXP("'")} W{REGEXP("t")}POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="ImperativesClause", "superCategory"="Clause", "name"="letsSuggestion", "level"="A2")}; 

//10.EmphasisingAnInstructionImperatives
(Dont POS_VERB NC) {-> CREATE(GrammarProfile, "subCategory"="ImperativesClause", "superCategory"="Clause", "name"="EmphasisingAnInstructionImperatives", "level"="A2")}; 
(Dont POS_VERB ) {-> CREATE(GrammarProfile, "subCategory"="ImperativesClause", "superCategory"="Clause", "name"="EmphasisingAnInstructionImperatives", "level"="A2")}; 


//5.Interrogatives
//11.AffirmativeInterrogativeWithAuxiliaryBeHave
(Lemma{FEATURE("value", "be")} NC Doing) {-> CREATE(GrammarProfile, "subCategory"="InterrogativesClause", "superCategory"="Clause", "name"="AffirmativeInterrogativeWithAuxiliaryBeHave", "level"="A2")}; 
(Lemma{FEATURE("value", "have")} NC Done) {-> CREATE(GrammarProfile, "subCategory"="InterrogativesClause", "superCategory"="Clause", "name"="AffirmativeInterrogativeWithAuxiliaryBeHave", "level"="A2")}; 
(Lemma{FEATURE("value", "have")} NC W{REGEXP("(?i)got")}) {-> CREATE(GrammarProfile, "subCategory"="InterrogativesClause", "superCategory"="Clause", "name"="AffirmativeInterrogativeWithAuxiliaryBeHave", "level"="A2")}; 

//12.AffirmativeInterrogative
(Lemma{FEATURE("value", "do")} NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="InterrogativesClause", "superCategory"="Clause", "name"="AffirmativeInterrogative", "level"="A2")}; 

//13.AffirmativeInterrogativeWithModalAuxiliaryVerbs
(ModalVerb NC POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="InterrogativesClause", "superCategory"="Clause", "name"="AffirmativeInterrogativeWithModalAuxiliaryVerbs", "level"="A2")}; 

//14.AffirmativeWHInterrogative
(WHWord POS_VERB NC) {-> CREATE(GrammarProfile, "subCategory"="InterrogativesClause", "superCategory"="Clause", "name"="AffirmativeWHInterrogative", "level"="A2")}; 

//15.NegativeWHInterrogative
(WHWord POS_VERB Not NC) {-> CREATE(GrammarProfile, "subCategory"="InterrogativesClause", "superCategory"="Clause", "name"="NegativeWHInterrogative", "level"="A2")}; 

//16.NegativeInterrogative
(POS_VERB Not NC) {-> CREATE(GrammarProfile, "subCategory"="InterrogativesClause", "superCategory"="Clause", "name"="NegativeInterrogative", "level"="A2")}; 



//6.PhrasesExclamations
//17.WhatA
(W{REGEXP("(?i)what")} W{REGEXP("(?i)a")} POS_ADJ POS_NOUN) {-> CREATE(GrammarProfile, "subCategory"="PhrasesExclamationsClause", "superCategory"="Clause", "name"="WhatA", "level"="A2")}; 

//18.WhatAPityThatClause
(W{REGEXP("(?i)what")} W{REGEXP("(?i)a")} W{REGEXP("(?i)pity")} W{REGEXP("(?i)that")}) {-> CREATE(GrammarProfile, "subCategory"="PhrasesExclamationsClause", "superCategory"="Clause", "name"="WhatAPityThatClause", "level"="A2")}; 
(W{REGEXP("(?i)what")} W{REGEXP("(?i)a")} W{REGEXP("(?i)pity")}) {-> CREATE(GrammarProfile, "subCategory"="PhrasesExclamationsClause", "superCategory"="Clause", "name"="WhatAPityThatClause", "level"="A2")}; 



//7.Relative
//19.NonDefiningSubjectWithWho
(NC W{REGEXP("(?i)who")} Adverb POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="RelativeClause", "superCategory"="Clause", "name"="NonDefiningSubjectWithWho", "level"="A2")}; 
(NC W{REGEXP("(?i)who")}  POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="RelativeClause", "superCategory"="Clause", "name"="NonDefiningSubjectWithWho", "level"="A2")}; 

//20.DefiningSubjectWithWho
(NC W{REGEXP("(?i)who")} Adverb POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="RelativeClause", "superCategory"="Clause", "name"="DefiningSubjectWithWho", "level"="A2")}; 
(NC W{REGEXP("(?i)who")}  POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="RelativeClause", "superCategory"="Clause", "name"="DefiningSubjectWithWho", "level"="A2")}; 

//21.NonDefiningSubjectWithWhich
(NC COMMA W{REGEXP("(?i)which")}  POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="RelativeClause", "superCategory"="Clause", "name"="NonDefiningSubjectWithWhich", "level"="A2")}; 
(NC  W{REGEXP("(?i)which")}  POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="RelativeClause", "superCategory"="Clause", "name"="NonDefiningSubjectWithWhich", "level"="A2")}; 

//22.DefiningSubjectWithWhich
(NC COMMA W{REGEXP("(?i)which")}  POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="RelativeClause", "superCategory"="Clause", "name"="DefiningSubjectWithWhich", "level"="A2")}; 
(NC  W{REGEXP("(?i)which")}  POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="RelativeClause", "superCategory"="Clause", "name"="DefiningSubjectWithWhich", "level"="A2")}; 

//23.DefiningObjectWithThat
(NC W{REGEXP("(?i)that")} NC VC) {-> CREATE(GrammarProfile, "subCategory"="RelativeClause", "superCategory"="Clause", "name"="DefiningObjectWithThat", "level"="A2")}; 

//24.NondefiningObjectWithWhich
(NC W{REGEXP("(?i)which")} NC VC) {-> CREATE(GrammarProfile, "subCategory"="RelativeClause", "superCategory"="Clause", "name"="NondefiningObjectWithWhich", "level"="A2")}; 

//25.DefiningObjectWithWhich
(NC W{REGEXP("(?i)which")} NC VC) {-> CREATE(GrammarProfile, "subCategory"="RelativeClause", "superCategory"="Clause", "name"="DefiningObjectWithWhich", "level"="A2")}; 

//26.DefiningWithoutPronoun
(NC NC VC) {-> CREATE(GrammarProfile, "subCategory"="RelativeClause", "superCategory"="Clause", "name"="DefiningWithoutPronoun", "level"="A2")}; 



//8.Subordinated
//27.IfClausesConditions
(IfClause) {-> CREATE(GrammarProfile, "subCategory"="SubordinatedClause", "superCategory"="Clause", "name"="IfClausesConditions", "level"="A2")}; 

//28.TimeSubordinated
(W{REGEXP("(?i)when")} FiniteClause1) {-> CREATE(GrammarProfile, "subCategory"="SubordinatedClause", "superCategory"="Clause", "name"="TimeSubordinated", "level"="A2")}; 
(W{REGEXP("(?i)while")} FiniteClause1) {-> CREATE(GrammarProfile, "subCategory"="SubordinatedClause", "superCategory"="Clause", "name"="TimeSubordinated", "level"="A2")}; 

//29.PurposeSubordinated
(ToDoNonFiniteClause) {-> CREATE(GrammarProfile, "subCategory"="SubordinatedClause", "superCategory"="Clause", "name"="PurposeSubordinated", "level"="A2")}; 


//9.Conditional
//30.IfPresentSimple
(W{REGEXP("(?i)if")} NC Present) {-> CREATE(GrammarProfile, "subCategory"="ConditionalClause", "superCategory"="Clause", "name"="IfPresentSimple", "level"="A2")}; 

//31.PresentSimpleIfClauseImperative
(W{REGEXP("(?i)if")} NC Present) {-> CREATE(GrammarProfile, "subCategory"="ConditionalClause", "superCategory"="Clause", "name"="PresentSimpleIfClauseImperative", "level"="A2")}; 
(POS{FEATURE("PosValue", "VB")} NC) {-> CREATE(GrammarProfile, "subCategory"="ConditionalClause", "superCategory"="Clause", "name"="PresentSimpleIfClauseImperative", "level"="A2")}; 
(POS{FEATURE("PosValue", "VB")} ) {-> CREATE(GrammarProfile, "subCategory"="ConditionalClause", "superCategory"="Clause", "name"="PresentSimpleIfClauseImperative", "level"="A2")}; 

//32.PresentSimpleIfClauseRealConditions
(W{REGEXP("(?i)if")} NC Present) {-> CREATE(GrammarProfile, "subCategory"="ConditionalClause", "superCategory"="Clause", "name"="PresentSimpleIfClauseRealConditions", "level"="A2")}; 
(POS{FEATURE("PosValue", "VB")} NC) {-> CREATE(GrammarProfile, "subCategory"="ConditionalClause", "superCategory"="Clause", "name"="PresentSimpleIfClauseRealConditions", "level"="A2")}; 
(POS{FEATURE("PosValue", "VB")} ) {-> CREATE(GrammarProfile, "subCategory"="ConditionalClause", "superCategory"="Clause", "name"="PresentSimpleIfClauseRealConditions", "level"="A2")}; 

(NC Can POS_VERB) {-> CREATE(GrammarProfile, "subCategory"="ConditionalClause", "superCategory"="Clause", "name"="PresentSimpleIfClauseRealConditions", "level"="A2")}; 

//33.IfClauseImperativeHedging
(W{REGEXP("(?i)if")} W{REGEXP("(?i)you")} W{REGEXP("(?i)like")}) {-> CREATE(GrammarProfile, "subCategory"="ConditionalClause", "superCategory"="Clause", "name"="IfClauseImperativeHedging", "level"="A2")}; 
(W{REGEXP("(?i)if")} W{REGEXP("(?i)you")} W{REGEXP("(?i)want")}) {-> CREATE(GrammarProfile, "subCategory"="ConditionalClause", "superCategory"="Clause", "name"="IfClauseImperativeHedging", "level"="A2")}; 
(W{REGEXP("(?i)if")} W{REGEXP("(?i)you")} W{REGEXP("(?i)prefer")}) {-> CREATE(GrammarProfile, "subCategory"="ConditionalClause", "superCategory"="Clause", "name"="IfClauseImperativeHedging", "level"="A2")}; 
